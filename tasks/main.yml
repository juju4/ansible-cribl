---

- name: Include variables
  ansible.builtin.include_vars: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      paths:
        - 'vars'

- name: Debug | ansible_virtualization_type
  ansible.builtin.debug:
    var: ansible_virtualization_type
    verbosity: 1

- name: Set fact is_container
  ansible.builtin.set_fact:
    is_container: true
  when: >
    (ansible_virtualization_type is defined and
      (ansible_virtualization_type == "docker"
       or ansible_virtualization_type == "containerd"
       or ansible_virtualization_type == "container"
      )
    )

- name: Debug | is_container
  ansible.builtin.debug:
    var: is_container
    verbosity: 1

- name: Ensure archives folder exists
  ansible.builtin.file:
    dest: "{{ install_archives }}"
    state: directory
    mode: '0775'
  become: yes
  become_user: root

- name: Remove conflicting dependencies
  ansible.builtin.package:
    name: "{{ cribl_conflict_deps | default([]) }}"
    state: absent
  when:
    - cribl_conflict_deps | length > 0

- name: Install dependencies
  ansible.builtin.package:
    name: "{{ cribl_deps }}"
    state: present

- name: Ensure cribl user exists
  ansible.builtin.user:
    name: "{{ cribl_user }}"
    home: "{{ cribl_userhome }}"
    system: true
    create_home: no
  become: yes
  become_user: root

- name: Grant user access to archives
  ansible.posix.acl:
    path: "{{ install_archives }}"
    entity: "{{ cribl_user }}"
    etype: user
    permissions: rwx
    state: present
  become: yes
  become_user: root

- name: Import cribl-url
  ansible.builtin.import_tasks: cribl-url.yml
  when: cribl_from == 'url'

- name: Import cribl-file
  ansible.builtin.import_tasks: cribl-file.yml
  when: cribl_from == 'file'

- name: Import cribl
  ansible.builtin.import_tasks: cribl.yml

- name: Import systemd
  ansible.builtin.import_tasks: systemd.yml
  become: yes
  become_user: root
  when:
    - not is_container|bool

- name: Import cribl-poststart
  ansible.builtin.import_tasks: cribl-poststart.yml
  when:
    - not is_container|bool

- name: Import reporting
  ansible.builtin.import_tasks: reporting.yml
  when: cribl_reporting

- name: Add symlinks to /etc and /var/log
  ansible.builtin.file:
    src: "{{ item.s }}"
    dest: "{{ item.d }}"
    state: link
    mode: '0755'
    owner: "{{ cribl_user }}"
  loop:
    - { s: /opt/cribl/log, d: /var/log/cribl }
    - { s: /opt/cribl/local/cribl, d: /etc/cribl }
