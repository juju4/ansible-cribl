---

- name: Ensure cribl home and subdirectories exist
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ cribl_user }}"
  loop:
    - "{{ cribl_home }}"
    - "{{ cribl_home }}/local/cribl/auth"
    - "{{ cribl_home }}/local/cribl/pipelines"
    - /opt/cribl/log
    - "{{ cribl_local_directories }}"
    - "{{ cribl_local_logsdir }}"

- name: Unarchive Cribl
  ansible.builtin.unarchive:
    src: "{{ install_archives }}/cribl.tgz"
    dest: "{{ cribl_home }}"
    # FIXME! need mode preserve archive or at least file+dirs
    mode: '0755'
    remote_src: true
    extra_opts: --strip-components=1
    creates: "{{ cribl_home }}/bin/cribl"
  become: true
  become_user: "{{ cribl_user }}"

- name: Configure inputs
  ansible.builtin.template:
    src: "{{ cribl_inputs_template }}.j2"
    dest: "{{ cribl_home }}/local/cribl/inputs.yml"
    mode: '0600'
    owner: "{{ cribl_user }}"
    backup: "{{ cribl_backup | default('no') }}"
  notify:
    - Restart Cribl

- name: Configure outputs
  ansible.builtin.template:
    src: "{{ cribl_outputs_template }}.j2"
    dest: "{{ cribl_home }}/local/cribl/outputs.yml"
    mode: '0644'
    owner: "{{ cribl_user }}"
    backup: "{{ cribl_backup | default('no') }}"
  notify:
    - Restart Cribl

- name: Debug | copy new output
  ansible.builtin.copy:
    src: "{{ cribl_home }}/local/cribl/outputs.yml"
    dest: "{{ cribl_home }}/local/cribl/outputs.yml.new"
    mode: '0644'
    owner: "{{ cribl_user }}"
    remote_src: true
  when: false

- name: Ensure pipelines directories exists
  ansible.builtin.file:
    path: "{{ cribl_home }}/local/cribl/pipelines/{{ item.name }}"
    state: directory
    mode: '0755'
    owner: "{{ cribl_user }}"
  loop: "{{ cribl_pipelines_templates }}"

- name: Configure pipelines
  ansible.builtin.template:
    src: "{{ item.template }}.j2"
    dest: "{{ cribl_home }}/local/cribl/pipelines/{{ item.dest | default(item.name + '/conf.yml') }}"
    mode: '0644'
    owner: "{{ cribl_user }}"
    backup: "{{ cribl_backup | default('no') }}"
  loop: "{{ cribl_pipelines_templates }}"
  notify:
    - Restart Cribl

- name: Cribl license file
  when: cribl_license_dat|string
  block:
    - name: Stat license file
      ansible.builtin.stat:
        path: "{{ cribl_home }}/local/cribl/auth/676f6174733432.dat"
      register: lic
    - name: Restore license file
      ansible.builtin.copy:
        src: "{{ cribl_license_dat }}"
        dest: "{{ cribl_home }}/local/cribl/auth/676f6174733432.dat"
        mode: '0644'
        backup: "{{ cribl_backup | default('no') }}"
      notify:
        - Restart Cribl
      when: not lic.stat.exists
